import fgb_sage
from memory_profiler import memory_usage
import time

def measure_performance(func, *args, **kwargs):
    start_time = time.time()
    mem_usage_before = memory_usage()[0]

    result = func(*args, **kwargs)

    mem_usage_after = memory_usage()[0]
    end_time = time.time()

    execution_time = end_time - start_time
    memory_used = mem_usage_after - mem_usage_before

    return result, execution_time, memory_used


# Example function to measure
def compute_gb():
    F.<a> = GF(2)
    n = 20
    Fxx = PolynomialRing(F, n, 'x')
    x = Fxx.gens()
    system = [x[0]*x[2] + x[1]*x[2] + x[0]*x[3] + x[1]*x[3] + x[2]*x[3] + x[2]*x[4] + x[3]*x[4] + x[1]*x[5] + x[3]*x[5] + x[1]*x[6] + x[5]*x[6] + x[6]*x[7] + x[0]*x[8] + x[4]*x[8] + x[0]*x[9] + x[1]*x[9] + x[2]*x[9] + x[3]*x[9] + x[5]*x[9] + x[6]*x[9] + x[0]*x[10] + x[1]*x[10] + x[5]*x[10] + x[7]*x[10] + x[8]*x[10] + x[2]*x[11] + x[3]*x[11] + x[4]*x[11] + x[8]*x[11] + x[0]*x[12] + x[1]*x[12] + x[2]*x[12] + x[3]*x[12] + x[4]*x[12] + x[5]*x[12] + x[6]*x[12] + x[7]*x[12] + x[9]*x[12] + x[10]*x[12] + x[11]*x[12] + x[2]*x[13] + x[4]*x[13] + x[5]*x[13] + x[6]*x[13] + x[8]*x[13] + x[9]*x[13] + x[10]*x[13] + x[11]*x[13] + x[0]*x[14] + x[1]*x[14] + x[3]*x[14] + x[5]*x[14] + x[7]*x[14] + x[8]*x[14] + x[9]*x[14] + x[12]*x[14] + x[0]*x[15] + x[9]*x[15] + x[10]*x[15] + x[11]*x[15] + x[13]*x[15] + x[14]*x[15] + x[1]*x[16] + x[2]*x[16] + x[4]*x[16] + x[5]*x[16] + x[8]*x[16] + x[9]*x[16] + x[11]*x[16] + x[12]*x[16] + x[13]*x[16] + x[2]*x[17] + x[5]*x[17] + x[8]*x[17] + x[9]*x[17] + x[12]*x[17] + x[14]*x[17] + x[15]*x[17] + x[0]*x[18] + x[2]*x[18] + x[5]*x[18] + x[7]*x[18] + x[13]*x[18] + x[14]*x[18] + x[15]*x[18] + x[0]*x[19] + x[1]*x[19] + x[2]*x[19] + x[3]*x[19] + x[4]*x[19] + x[5]*x[19] + x[6]*x[19] + x[8]*x[19] + x[10]*x[19] + x[13]*x[19] + x[14]*x[19] + x[16]*x[19] + x[2] + x[3] + x[4] + x[6] + x[8] + x[11] + x[13] + x[14] + x[17] + 1,
x[0]*x[1] + x[3]*x[4] + x[0]*x[5] + x[2]*x[5] + x[1]*x[6] + x[2]*x[6] + x[3]*x[6] + x[1]*x[7] + x[3]*x[7] + x[6]*x[7] + x[0]*x[8] + x[2]*x[8] + x[7]*x[8] + x[1]*x[9] + x[5]*x[9] + x[6]*x[9] + x[8]*x[9] + x[0]*x[10] + x[1]*x[10] + x[4]*x[10] + x[6]*x[10] + x[7]*x[10] + x[8]*x[10] + x[9]*x[10] + x[0]*x[11] + x[2]*x[11] + x[3]*x[11] + x[5]*x[11] + x[6]*x[11] + x[7]*x[11] + x[9]*x[11] + x[0]*x[12] + x[3]*x[12] + x[4]*x[12] + x[9]*x[12] + x[11]*x[12] + x[2]*x[13] + x[4]*x[13] + x[5]*x[13] + x[10]*x[13] + x[12]*x[13] + x[0]*x[14] + x[1]*x[14] + x[2]*x[14] + x[3]*x[14] + x[6]*x[14] + x[8]*x[14] + x[0]*x[15] + x[5]*x[15] + x[6]*x[15] + x[7]*x[15] + x[11]*x[15] + x[0]*x[16] + x[1]*x[16] + x[2]*x[16] + x[3]*x[16] + x[5]*x[16] + x[6]*x[16] + x[7]*x[16] + x[9]*x[16] + x[12]*x[16] + x[13]*x[16] + x[14]*x[16] + x[15]*x[16] + x[0]*x[17] + x[5]*x[17] + x[7]*x[17] + x[9]*x[17] + x[10]*x[17] + x[12]*x[17] + x[14]*x[17] + x[16]*x[17] + x[0]*x[18] + x[1]*x[18] + x[4]*x[18] + x[5]*x[18] + x[8]*x[18] + x[9]*x[18] + x[11]*x[18] + x[15]*x[18] + x[0]*x[19] + x[1]*x[19] + x[2]*x[19] + x[4]*x[19] + x[10]*x[19] + x[11]*x[19] + x[12]*x[19] + x[15]*x[19] + x[16]*x[19] + x[1] + x[2] + x[3] + x[4] + x[6] + x[8] + x[9] + x[11] + x[12] + x[13] + x[15] + x[16] + x[19],
x[0]*x[2] + x[0]*x[3] + x[1]*x[3] + x[2]*x[3] + x[0]*x[4] + x[2]*x[4] + x[3]*x[4] + x[0]*x[5] + x[1]*x[5] + x[2]*x[5] + x[3]*x[5] + x[0]*x[6] + x[1]*x[6] + x[2]*x[6] + x[3]*x[6] + x[0]*x[7] + x[3]*x[7] + x[1]*x[8] + x[3]*x[8] + x[7]*x[8] + x[4]*x[9] + x[5]*x[9] + x[6]*x[9] + x[7]*x[9] + x[0]*x[10] + x[2]*x[10] + x[3]*x[10] + x[4]*x[10] + x[5]*x[10] + x[6]*x[10] + x[7]*x[10] + x[8]*x[10] + x[9]*x[10] + x[1]*x[11] + x[2]*x[11] + x[3]*x[11] + x[4]*x[11] + x[5]*x[11] + x[8]*x[11] + x[9]*x[11] + x[1]*x[12] + x[4]*x[12] + x[5]*x[12] + x[6]*x[12] + x[7]*x[12] + x[8]*x[12] + x[10]*x[12] + x[11]*x[12] + x[0]*x[13] + x[1]*x[13] + x[2]*x[13] + x[3]*x[13] + x[4]*x[13] + x[5]*x[13] + x[9]*x[13] + x[10]*x[13] + x[11]*x[13] + x[12]*x[13] + x[1]*x[14] + x[3]*x[14] + x[7]*x[14] + x[8]*x[14] + x[11]*x[14] + x[12]*x[14] + x[0]*x[15] + x[3]*x[15] + x[4]*x[15] + x[5]*x[15] + x[6]*x[15] + x[7]*x[15] + x[8]*x[15] + x[9]*x[15] + x[13]*x[15] + x[14]*x[15] + x[1]*x[16] + x[2]*x[16] + x[7]*x[16] + x[8]*x[16] + x[10]*x[16] + x[12]*x[16] + x[13]*x[16] + x[14]*x[16] + x[15]*x[16] + x[0]*x[17] + x[4]*x[17] + x[5]*x[17] + x[8]*x[17] + x[10]*x[17] + x[13]*x[17] + x[14]*x[17] + x[15]*x[17] + x[16]*x[17] + x[0]*x[18] + x[3]*x[18] + x[4]*x[18] + x[8]*x[18] + x[9]*x[18] + x[12]*x[18] + x[14]*x[18] + x[15]*x[18] + x[17]*x[18] + x[5]*x[19] + x[6]*x[19] + x[8]*x[19] + x[10]*x[19] + x[11]*x[19] + x[13]*x[19] + x[14]*x[19] + x[15]*x[19] + x[17]*x[19] + x[18]*x[19] + x[3] + x[7] + x[9] + x[12] + x[14] + x[16] + x[19] + 1,
x[0]*x[2] + x[0]*x[3] + x[2]*x[3] + x[2]*x[4] + x[0]*x[5] + x[2]*x[5] + x[3]*x[5] + x[0]*x[6] + x[3]*x[6] + x[4]*x[6] + x[5]*x[6] + x[0]*x[7] + x[1]*x[7] + x[2]*x[7] + x[3]*x[7] + x[5]*x[7] + x[6]*x[7] + x[1]*x[8] + x[3]*x[8] + x[5]*x[8] + x[1]*x[9] + x[4]*x[9] + x[6]*x[9] + x[7]*x[9] + x[8]*x[9] + x[1]*x[10] + x[6]*x[10] + x[7]*x[10] + x[9]*x[10] + x[2]*x[11] + x[4]*x[11] + x[5]*x[11] + x[8]*x[11] + x[9]*x[11] + x[10]*x[11] + x[0]*x[12] + x[2]*x[12] + x[5]*x[12] + x[8]*x[12] + x[9]*x[12] + x[4]*x[13] + x[6]*x[13] + x[8]*x[13] + x[9]*x[13] + x[10]*x[13] + x[11]*x[13] + x[12]*x[13] + x[0]*x[14] + x[5]*x[14] + x[6]*x[14] + x[8]*x[14] + x[9]*x[14] + x[10]*x[14] + x[12]*x[14] + x[13]*x[14] + x[0]*x[15] + x[3]*x[15] + x[4]*x[15] + x[5]*x[15] + x[6]*x[15] + x[7]*x[15] + x[10]*x[15] + x[12]*x[15] + x[13]*x[15] + x[14]*x[15] + x[0]*x[16] + x[1]*x[16] + x[2]*x[16] + x[3]*x[16] + x[4]*x[16] + x[6]*x[16] + x[8]*x[16] + x[9]*x[16] + x[10]*x[16] + x[1]*x[17] + x[3]*x[17] + x[4]*x[17] + x[6]*x[17] + x[7]*x[17] + x[9]*x[17] + x[10]*x[17] + x[16]*x[17] + x[1]*x[18] + x[2]*x[18] + x[3]*x[18] + x[4]*x[18] + x[6]*x[18] + x[8]*x[18] + x[10]*x[18] + x[12]*x[18] + x[14]*x[18] + x[0]*x[19] + x[1]*x[19] + x[2]*x[19] + x[5]*x[19] + x[8]*x[19] + x[10]*x[19] + x[14]*x[19] + x[15]*x[19] + x[18]*x[19] + x[1] + x[3] + x[5] + x[6] + x[7] + x[8] + x[9] + x[10] + x[11] + x[14] + x[15] + x[16],
x[0]*x[2] + x[1]*x[2] + x[0]*x[3] + x[1]*x[3] + x[2]*x[3] + x[0]*x[4] + x[2]*x[4] + x[2]*x[5] + x[3]*x[5] + x[0]*x[6] + x[2]*x[6] + x[4]*x[6] + x[5]*x[6] + x[0]*x[7] + x[2]*x[7] + x[4]*x[7] + x[5]*x[7] + x[6]*x[7] + x[0]*x[8] + x[3]*x[8] + x[4]*x[8] + x[7]*x[8] + x[0]*x[9] + x[1]*x[9] + x[8]*x[9] + x[2]*x[10] + x[3]*x[10] + x[5]*x[10] + x[7]*x[10] + x[8]*x[10] + x[9]*x[10] + x[0]*x[11] + x[1]*x[11] + x[9]*x[11] + x[2]*x[12] + x[3]*x[12] + x[4]*x[12] + x[9]*x[12] + x[11]*x[12] + x[0]*x[13] + x[1]*x[13] + x[2]*x[13] + x[3]*x[13] + x[4]*x[13] + x[7]*x[13] + x[8]*x[13] + x[9]*x[13] + x[1]*x[14] + x[2]*x[14] + x[4]*x[14] + x[5]*x[14] + x[6]*x[14] + x[7]*x[14] + x[10]*x[14] + x[0]*x[15] + x[3]*x[15] + x[5]*x[15] + x[7]*x[15] + x[8]*x[15] + x[12]*x[15] + x[13]*x[15] + x[0]*x[16] + x[1]*x[16] + x[2]*x[16] + x[3]*x[16] + x[4]*x[16] + x[7]*x[16] + x[10]*x[16] + x[11]*x[16] + x[12]*x[16] + x[14]*x[16] + x[15]*x[16] + x[1]*x[17] + x[3]*x[17] + x[5]*x[17] + x[6]*x[17] + x[9]*x[17] + x[0]*x[18] + x[2]*x[18] + x[4]*x[18] + x[5]*x[18] + x[6]*x[18] + x[7]*x[18] + x[8]*x[18] + x[9]*x[18] + x[11]*x[18] + x[14]*x[18] + x[15]*x[18] + x[17]*x[18] + x[2]*x[19] + x[4]*x[19] + x[5]*x[19] + x[9]*x[19] + x[10]*x[19] + x[11]*x[19] + x[13]*x[19] + x[16]*x[19] + x[18]*x[19] + x[2] + x[3] + x[5] + x[7] + x[9] + x[10] + x[13] + x[14] + x[18] + x[19],
x[1]*x[2] + x[0]*x[3] + x[2]*x[3] + x[1]*x[4] + x[2]*x[4] + x[0]*x[5] + x[0]*x[6] + x[3]*x[6] + x[4]*x[6] + x[5]*x[6] + x[0]*x[7] + x[2]*x[7] + x[3]*x[7] + x[0]*x[8] + x[1]*x[8] + x[3]*x[8] + x[4]*x[8] + x[5]*x[8] + x[6]*x[8] + x[1]*x[9] + x[4]*x[9] + x[5]*x[9] + x[6]*x[9] + x[0]*x[10] + x[4]*x[10] + x[5]*x[10] + x[7]*x[10] + x[8]*x[10] + x[9]*x[10] + x[0]*x[11] + x[5]*x[11] + x[6]*x[11] + x[8]*x[11] + x[9]*x[11] + x[1]*x[12] + x[2]*x[12] + x[4]*x[12] + x[5]*x[12] + x[7]*x[12] + x[8]*x[12] + x[9]*x[12] + x[10]*x[12] + x[0]*x[13] + x[3]*x[13] + x[4]*x[13] + x[5]*x[13] + x[6]*x[13] + x[7]*x[13] + x[10]*x[13] + x[11]*x[13] + x[1]*x[14] + x[2]*x[14] + x[3]*x[14] + x[4]*x[14] + x[10]*x[14] + x[11]*x[14] + x[13]*x[14] + x[0]*x[15] + x[1]*x[15] + x[2]*x[15] + x[5]*x[15] + x[7]*x[15] + x[8]*x[15] + x[9]*x[15] + x[10]*x[15] + x[11]*x[15] + x[12]*x[15] + x[14]*x[15] + x[0]*x[16] + x[2]*x[16] + x[3]*x[16] + x[4]*x[16] + x[5]*x[16] + x[7]*x[16] + x[8]*x[16] + x[13]*x[16] + x[0]*x[17] + x[1]*x[17] + x[4]*x[17] + x[7]*x[17] + x[10]*x[17] + x[11]*x[17] + x[13]*x[17] + x[14]*x[17] + x[16]*x[17] + x[1]*x[18] + x[4]*x[18] + x[5]*x[18] + x[6]*x[18] + x[9]*x[18] + x[12]*x[18] + x[15]*x[18] + x[16]*x[18] + x[1]*x[19] + x[2]*x[19] + x[3]*x[19] + x[4]*x[19] + x[11]*x[19] + x[12]*x[19] + x[13]*x[19] + x[14]*x[19] + x[15]*x[19] + x[1] + x[2] + x[4] + x[5] + x[11] + x[12] + x[13] + x[14] + x[16] + x[18] + 1,
x[1]*x[3] + x[2]*x[3] + x[0]*x[4] + x[1]*x[4] + x[2]*x[4] + x[3]*x[4] + x[1]*x[5] + x[2]*x[5] + x[4]*x[6] + x[1]*x[7] + x[2]*x[7] + x[6]*x[7] + x[1]*x[8] + x[3]*x[8] + x[4]*x[8] + x[5]*x[8] + x[6]*x[8] + x[0]*x[9] + x[3]*x[9] + x[7]*x[9] + x[8]*x[9] + x[1]*x[10] + x[4]*x[10] + x[5]*x[10] + x[0]*x[11] + x[4]*x[11] + x[5]*x[11] + x[6]*x[11] + x[9]*x[11] + x[1]*x[12] + x[8]*x[12] + x[9]*x[12] + x[0]*x[13] + x[4]*x[13] + x[6]*x[13] + x[8]*x[13] + x[9]*x[13] + x[10]*x[13] + x[11]*x[13] + x[12]*x[13] + x[1]*x[14] + x[2]*x[14] + x[11]*x[14] + x[6]*x[15] + x[8]*x[15] + x[10]*x[15] + x[11]*x[15] + x[13]*x[15] + x[14]*x[15] + x[1]*x[16] + x[2]*x[16] + x[8]*x[16] + x[10]*x[16] + x[11]*x[16] + x[12]*x[16] + x[13]*x[16] + x[14]*x[16] + x[0]*x[17] + x[1]*x[17] + x[3]*x[17] + x[5]*x[17] + x[7]*x[17] + x[10]*x[17] + x[11]*x[17] + x[12]*x[17] + x[16]*x[17] + x[0]*x[18] + x[1]*x[18] + x[5]*x[18] + x[6]*x[18] + x[7]*x[18] + x[8]*x[18] + x[13]*x[18] + x[14]*x[18] + x[16]*x[18] + x[17]*x[18] + x[0]*x[19] + x[1]*x[19] + x[3]*x[19] + x[4]*x[19] + x[5]*x[19] + x[7]*x[19] + x[8]*x[19] + x[9]*x[19] + x[13]*x[19] + x[14]*x[19] + x[4] + x[7] + x[9] + x[10] + x[12] + x[13] + x[18],
x[1]*x[2] + x[0]*x[3] + x[2]*x[3] + x[0]*x[4] + x[1]*x[5] + x[2]*x[5] + x[4]*x[5] + x[1]*x[6] + x[3]*x[6] + x[1]*x[7] + x[3]*x[7] + x[4]*x[7] + x[5]*x[7] + x[6]*x[7] + x[0]*x[8] + x[6]*x[8] + x[0]*x[9] + x[1]*x[9] + x[2]*x[9] + x[4]*x[9] + x[5]*x[9] + x[0]*x[10] + x[2]*x[10] + x[4]*x[10] + x[6]*x[10] + x[7]*x[10] + x[9]*x[10] + x[1]*x[11] + x[2]*x[11] + x[4]*x[11] + x[5]*x[11] + x[7]*x[11] + x[8]*x[11] + x[0]*x[12] + x[1]*x[12] + x[4]*x[12] + x[5]*x[12] + x[7]*x[12] + x[8]*x[12] + x[10]*x[12] + x[0]*x[13] + x[4]*x[13] + x[6]*x[13] + x[7]*x[13] + x[9]*x[13] + x[12]*x[13] + x[0]*x[14] + x[3]*x[14] + x[5]*x[14] + x[7]*x[14] + x[9]*x[14] + x[10]*x[14] + x[11]*x[14] + x[13]*x[14] + x[0]*x[15] + x[2]*x[15] + x[3]*x[15] + x[8]*x[15] + x[9]*x[15] + x[11]*x[15] + x[12]*x[15] + x[3]*x[16] + x[6]*x[16] + x[8]*x[16] + x[13]*x[16] + x[15]*x[16] + x[2]*x[17] + x[3]*x[17] + x[4]*x[17] + x[5]*x[17] + x[6]*x[17] + x[7]*x[17] + x[8]*x[17] + x[10]*x[17] + x[11]*x[17] + x[13]*x[17] + x[14]*x[17] + x[15]*x[17] + x[0]*x[18] + x[4]*x[18] + x[5]*x[18] + x[8]*x[18] + x[10]*x[18] + x[11]*x[18] + x[12]*x[18] + x[13]*x[18] + x[14]*x[18] + x[17]*x[18] + x[6]*x[19] + x[7]*x[19] + x[8]*x[19] + x[11]*x[19] + x[12]*x[19] + x[13]*x[19] + x[14]*x[19] + x[15]*x[19] + x[17]*x[19] + x[0] + x[1] + x[4] + x[5] + x[7] + x[9] + x[11] + x[12] + x[15] + x[17] + x[18] + x[19] + 1,
x[0]*x[1] + x[0]*x[3] + x[2]*x[3] + x[2]*x[4] + x[2]*x[5] + x[3]*x[5] + x[0]*x[6] + x[1]*x[6] + x[1]*x[7] + x[2]*x[7] + x[5]*x[7] + x[0]*x[8] + x[3]*x[8] + x[4]*x[8] + x[3]*x[9] + x[4]*x[9] + x[8]*x[9] + x[0]*x[10] + x[2]*x[10] + x[4]*x[10] + x[8]*x[10] + x[2]*x[11] + x[4]*x[11] + x[6]*x[11] + x[7]*x[11] + x[8]*x[11] + x[0]*x[12] + x[3]*x[12] + x[6]*x[12] + x[7]*x[12] + x[9]*x[12] + x[10]*x[12] + x[11]*x[12] + x[0]*x[13] + x[1]*x[13] + x[3]*x[13] + x[4]*x[13] + x[8]*x[13] + x[9]*x[13] + x[11]*x[13] + x[12]*x[13] + x[0]*x[14] + x[2]*x[14] + x[3]*x[14] + x[4]*x[14] + x[5]*x[14] + x[6]*x[14] + x[8]*x[14] + x[13]*x[14] + x[0]*x[15] + x[1]*x[15] + x[3]*x[15] + x[4]*x[15] + x[6]*x[15] + x[7]*x[15] + x[9]*x[15] + x[10]*x[15] + x[12]*x[15] + x[13]*x[15] + x[14]*x[15] + x[0]*x[16] + x[1]*x[16] + x[2]*x[16] + x[4]*x[16] + x[6]*x[16] + x[10]*x[16] + x[12]*x[16] + x[14]*x[16] + x[3]*x[17] + x[5]*x[17] + x[6]*x[17] + x[11]*x[17] + x[15]*x[17] + x[1]*x[18] + x[3]*x[18] + x[4]*x[18] + x[9]*x[18] + x[10]*x[18] + x[11]*x[18] + x[13]*x[18] + x[14]*x[18] + x[15]*x[18] + x[17]*x[18] + x[0]*x[19] + x[1]*x[19] + x[5]*x[19] + x[6]*x[19] + x[7]*x[19] + x[8]*x[19] + x[10]*x[19] + x[13]*x[19] + x[14]*x[19] + x[16]*x[19] + x[18]*x[19] + x[3] + x[4] + x[5] + x[6] + x[7] + x[8] + x[10] + x[11] + x[13] + x[14] + x[15] + x[19],
x[1]*x[2] + x[1]*x[3] + x[0]*x[4] + x[3]*x[5] + x[1]*x[6] + x[3]*x[6] + x[4]*x[6] + x[2]*x[7] + x[5]*x[7] + x[3]*x[8] + x[5]*x[8] + x[6]*x[8] + x[4]*x[9] + x[8]*x[9] + x[1]*x[10] + x[2]*x[10] + x[9]*x[10] + x[0]*x[11] + x[1]*x[11] + x[2]*x[11] + x[3]*x[11] + x[4]*x[11] + x[5]*x[11] + x[7]*x[11] + x[8]*x[11] + x[9]*x[11] + x[1]*x[12] + x[4]*x[12] + x[5]*x[12] + x[8]*x[12] + x[9]*x[12] + x[0]*x[13] + x[1]*x[13] + x[2]*x[13] + x[4]*x[13] + x[5]*x[13] + x[6]*x[13] + x[7]*x[13] + x[9]*x[13] + x[10]*x[13] + x[0]*x[14] + x[1]*x[14] + x[3]*x[14] + x[4]*x[14] + x[7]*x[14] + x[8]*x[14] + x[6]*x[15] + x[8]*x[15] + x[9]*x[15] + x[10]*x[15] + x[1]*x[16] + x[2]*x[16] + x[4]*x[16] + x[5]*x[16] + x[6]*x[16] + x[8]*x[16] + x[12]*x[16] + x[13]*x[16] + x[0]*x[17] + x[3]*x[17] + x[4]*x[17] + x[12]*x[17] + x[14]*x[17] + x[16]*x[17] + x[2]*x[18] + x[4]*x[18] + x[5]*x[18] + x[11]*x[18] + x[12]*x[18] + x[13]*x[18] + x[14]*x[18] + x[15]*x[18] + x[17]*x[18] + x[1]*x[19] + x[4]*x[19] + x[7]*x[19] + x[8]*x[19] + x[13]*x[19] + x[14]*x[19] + x[17]*x[19] + x[1] + x[2] + x[3] + x[5] + x[9] + x[10] + x[11] + x[13] + x[14] + x[15] + x[16] + x[18] + 1,
x[0]*x[1] + x[1]*x[2] + x[2]*x[3] + x[1]*x[4] + x[2]*x[4] + x[3]*x[4] + x[0]*x[5] + x[3]*x[5] + x[4]*x[5] + x[1]*x[6] + x[3]*x[6] + x[4]*x[6] + x[4]*x[7] + x[0]*x[8] + x[1]*x[8] + x[3]*x[8] + x[5]*x[8] + x[7]*x[8] + x[0]*x[9] + x[1]*x[9] + x[4]*x[9] + x[7]*x[9] + x[0]*x[10] + x[3]*x[10] + x[4]*x[10] + x[5]*x[10] + x[7]*x[10] + x[8]*x[10] + x[9]*x[10] + x[0]*x[11] + x[1]*x[11] + x[4]*x[11] + x[1]*x[12] + x[4]*x[12] + x[5]*x[12] + x[7]*x[12] + x[8]*x[12] + x[10]*x[12] + x[2]*x[13] + x[3]*x[13] + x[4]*x[13] + x[6]*x[13] + x[7]*x[13] + x[9]*x[13] + x[10]*x[13] + x[11]*x[13] + x[0]*x[14] + x[5]*x[14] + x[9]*x[14] + x[0]*x[15] + x[2]*x[15] + x[3]*x[15] + x[5]*x[15] + x[9]*x[15] + x[12]*x[15] + x[13]*x[15] + x[1]*x[16] + x[2]*x[16] + x[7]*x[16] + x[8]*x[16] + x[9]*x[16] + x[13]*x[16] + x[15]*x[16] + x[0]*x[17] + x[1]*x[17] + x[2]*x[17] + x[3]*x[17] + x[4]*x[17] + x[8]*x[17] + x[9]*x[17] + x[11]*x[17] + x[12]*x[17] + x[15]*x[17] + x[0]*x[18] + x[1]*x[18] + x[3]*x[18] + x[9]*x[18] + x[10]*x[18] + x[11]*x[18] + x[12]*x[18] + x[13]*x[18] + x[15]*x[18] + x[16]*x[18] + x[17]*x[18] + x[0]*x[19] + x[2]*x[19] + x[3]*x[19] + x[4]*x[19] + x[5]*x[19] + x[7]*x[19] + x[9]*x[19] + x[10]*x[19] + x[11]*x[19] + x[14]*x[19] + x[16]*x[19] + x[0] + x[3] + x[4] + x[6] + x[10] + x[11] + x[12] + x[14] + x[17] + x[18] + x[19] + 1,
x[0]*x[1] + x[0]*x[3] + x[1]*x[3] + x[0]*x[4] + x[1]*x[4] + x[0]*x[5] + x[1]*x[5] + x[2]*x[5] + x[3]*x[5] + x[4]*x[5] + x[3]*x[6] + x[4]*x[6] + x[1]*x[7] + x[0]*x[8] + x[4]*x[8] + x[6]*x[8] + x[3]*x[9] + x[6]*x[9] + x[7]*x[9] + x[0]*x[10] + x[7]*x[10] + x[8]*x[10] + x[0]*x[11] + x[1]*x[11] + x[7]*x[11] + x[9]*x[11] + x[2]*x[12] + x[5]*x[12] + x[6]*x[12] + x[2]*x[13] + x[4]*x[13] + x[9]*x[13] + x[11]*x[13] + x[12]*x[13] + x[1]*x[14] + x[3]*x[14] + x[5]*x[14] + x[7]*x[14] + x[8]*x[14] + x[9]*x[14] + x[11]*x[14] + x[13]*x[14] + x[0]*x[15] + x[6]*x[15] + x[7]*x[15] + x[8]*x[15] + x[9]*x[15] + x[11]*x[15] + x[12]*x[15] + x[13]*x[15] + x[14]*x[15] + x[2]*x[16] + x[4]*x[16] + x[5]*x[16] + x[6]*x[16] + x[7]*x[16] + x[9]*x[16] + x[13]*x[16] + x[0]*x[17] + x[1]*x[17] + x[2]*x[17] + x[3]*x[17] + x[4]*x[17] + x[5]*x[17] + x[6]*x[17] + x[8]*x[17] + x[10]*x[17] + x[11]*x[17] + x[13]*x[17] + x[14]*x[17] + x[15]*x[17] + x[16]*x[17] + x[0]*x[18] + x[6]*x[18] + x[7]*x[18] + x[8]*x[18] + x[9]*x[18] + x[10]*x[18] + x[11]*x[18] + x[13]*x[18] + x[14]*x[18] + x[17]*x[18] + x[0]*x[19] + x[4]*x[19] + x[5]*x[19] + x[7]*x[19] + x[8]*x[19] + x[11]*x[19] + x[14]*x[19] + x[15]*x[19] + x[16]*x[19] + x[18]*x[19] + x[0] + x[1] + x[2] + x[3] + x[4] + x[6] + x[7] + x[9] + x[10] + x[11] + x[12] + x[15] + x[18],
x[0]*x[2] + x[0]*x[3] + x[0]*x[4] + x[1]*x[4] + x[3]*x[4] + x[4]*x[6] + x[5]*x[7] + x[0]*x[8] + x[1]*x[8] + x[2]*x[8] + x[3]*x[8] + x[7]*x[8] + x[0]*x[9] + x[1]*x[9] + x[2]*x[9] + x[5]*x[9] + x[8]*x[9] + x[0]*x[10] + x[5]*x[10] + x[6]*x[10] + x[7]*x[10] + x[8]*x[10] + x[4]*x[11] + x[5]*x[11] + x[6]*x[11] + x[8]*x[11] + x[0]*x[12] + x[1]*x[12] + x[2]*x[12] + x[3]*x[12] + x[4]*x[12] + x[5]*x[12] + x[7]*x[12] + x[9]*x[12] + x[10]*x[12] + x[11]*x[12] + x[0]*x[13] + x[1]*x[13] + x[4]*x[13] + x[5]*x[13] + x[6]*x[13] + x[11]*x[13] + x[12]*x[13] + x[0]*x[14] + x[2]*x[14] + x[7]*x[14] + x[10]*x[14] + x[11]*x[14] + x[12]*x[14] + x[1]*x[15] + x[3]*x[15] + x[4]*x[15] + x[9]*x[15] + x[10]*x[15] + x[13]*x[15] + x[14]*x[15] + x[4]*x[16] + x[7]*x[16] + x[13]*x[16] + x[14]*x[16] + x[15]*x[16] + x[4]*x[17] + x[5]*x[17] + x[6]*x[17] + x[8]*x[17] + x[9]*x[17] + x[11]*x[17] + x[0]*x[18] + x[1]*x[18] + x[9]*x[18] + x[11]*x[18] + x[13]*x[18] + x[17]*x[18] + x[0]*x[19] + x[1]*x[19] + x[7]*x[19] + x[9]*x[19] + x[10]*x[19] + x[13]*x[19] + x[14]*x[19] + x[15]*x[19] + x[18]*x[19] + x[1] + x[2] + x[3] + x[4] + x[6] + x[8] + x[10] + x[11] + x[12] + x[17],
x[0]*x[1] + x[1]*x[2] + x[0]*x[3] + x[1]*x[3] + x[2]*x[3] + x[0]*x[4] + x[2]*x[4] + x[3]*x[4] + x[0]*x[5] + x[1]*x[5] + x[0]*x[6] + x[2]*x[6] + x[3]*x[6] + x[5]*x[6] + x[0]*x[7] + x[2]*x[7] + x[3]*x[7] + x[4]*x[7] + x[6]*x[7] + x[3]*x[8] + x[5]*x[8] + x[6]*x[8] + x[7]*x[8] + x[0]*x[9] + x[1]*x[9] + x[3]*x[9] + x[8]*x[9] + x[0]*x[10] + x[1]*x[10] + x[0]*x[11] + x[6]*x[11] + x[4]*x[12] + x[5]*x[12] + x[6]*x[12] + x[7]*x[12] + x[8]*x[12] + x[11]*x[12] + x[0]*x[13] + x[2]*x[13] + x[3]*x[13] + x[5]*x[13] + x[6]*x[13] + x[7]*x[13] + x[9]*x[13] + x[10]*x[13] + x[11]*x[13] + x[12]*x[13] + x[0]*x[14] + x[1]*x[14] + x[2]*x[14] + x[3]*x[14] + x[7]*x[14] + x[12]*x[14] + x[13]*x[14] + x[0]*x[15] + x[2]*x[15] + x[3]*x[15] + x[4]*x[15] + x[6]*x[15] + x[9]*x[15] + x[11]*x[15] + x[0]*x[16] + x[1]*x[16] + x[2]*x[16] + x[3]*x[16] + x[12]*x[16] + x[13]*x[16] + x[15]*x[16] + x[2]*x[17] + x[3]*x[17] + x[5]*x[17] + x[6]*x[17] + x[8]*x[17] + x[9]*x[17] + x[12]*x[17] + x[14]*x[17] + x[15]*x[17] + x[0]*x[18] + x[1]*x[18] + x[3]*x[18] + x[4]*x[18] + x[5]*x[18] + x[6]*x[18] + x[7]*x[18] + x[8]*x[18] + x[13]*x[18] + x[14]*x[18] + x[15]*x[18] + x[16]*x[18] + x[17]*x[18] + x[0]*x[19] + x[3]*x[19] + x[5]*x[19] + x[6]*x[19] + x[7]*x[19] + x[9]*x[19] + x[10]*x[19] + x[14]*x[19] + x[17]*x[19] + x[0] + x[1] + x[2] + x[4] + x[7] + x[8] + x[9] + x[10] + x[12] + x[15] + x[16] + x[19] + 1,
x[0]*x[1] + x[0]*x[3] + x[1]*x[3] + x[2]*x[3] + x[2]*x[4] + x[0]*x[5] + x[1]*x[5] + x[2]*x[5] + x[2]*x[6] + x[4]*x[6] + x[1]*x[7] + x[3]*x[7] + x[5]*x[7] + x[6]*x[7] + x[2]*x[8] + x[5]*x[8] + x[6]*x[8] + x[0]*x[9] + x[2]*x[9] + x[3]*x[9] + x[8]*x[9] + x[1]*x[10] + x[4]*x[10] + x[6]*x[10] + x[7]*x[10] + x[0]*x[11] + x[2]*x[11] + x[3]*x[11] + x[4]*x[11] + x[5]*x[11] + x[7]*x[11] + x[9]*x[11] + x[1]*x[12] + x[5]*x[12] + x[8]*x[12] + x[9]*x[12] + x[10]*x[12] + x[1]*x[13] + x[4]*x[13] + x[5]*x[13] + x[8]*x[13] + x[12]*x[13] + x[2]*x[14] + x[3]*x[14] + x[4]*x[14] + x[5]*x[14] + x[9]*x[14] + x[11]*x[14] + x[12]*x[14] + x[13]*x[14] + x[1]*x[15] + x[2]*x[15] + x[3]*x[15] + x[5]*x[15] + x[6]*x[15] + x[7]*x[15] + x[9]*x[15] + x[11]*x[15] + x[0]*x[16] + x[3]*x[16] + x[4]*x[16] + x[6]*x[16] + x[7]*x[16] + x[11]*x[16] + x[13]*x[16] + x[15]*x[16] + x[0]*x[17] + x[2]*x[17] + x[3]*x[17] + x[7]*x[17] + x[10]*x[17] + x[11]*x[17] + x[12]*x[17] + x[14]*x[17] + x[15]*x[17] + x[16]*x[17] + x[0]*x[18] + x[1]*x[18] + x[2]*x[18] + x[3]*x[18] + x[7]*x[18] + x[8]*x[18] + x[11]*x[18] + x[12]*x[18] + x[13]*x[18] + x[16]*x[18] + x[17]*x[18] + x[3]*x[19] + x[4]*x[19] + x[5]*x[19] + x[11]*x[19] + x[12]*x[19] + x[14]*x[19] + x[15]*x[19] + x[16]*x[19] + x[17]*x[19] + x[1] + x[3] + x[5] + x[7] + x[9] + x[11] + x[12] + x[16] + x[17] + x[18],
x[0]*x[2] + x[0]*x[3] + x[0]*x[5] + x[3]*x[5] + x[4]*x[5] + x[0]*x[7] + x[5]*x[7] + x[6]*x[7] + x[5]*x[8] + x[6]*x[8] + x[7]*x[8] + x[0]*x[9] + x[2]*x[9] + x[5]*x[9] + x[6]*x[9] + x[7]*x[9] + x[8]*x[9] + x[2]*x[10] + x[3]*x[10] + x[4]*x[10] + x[6]*x[10] + x[7]*x[10] + x[0]*x[11] + x[1]*x[11] + x[2]*x[11] + x[9]*x[11] + x[10]*x[11] + x[1]*x[12] + x[2]*x[12] + x[3]*x[12] + x[5]*x[12] + x[6]*x[12] + x[9]*x[12] + x[10]*x[12] + x[2]*x[13] + x[3]*x[13] + x[5]*x[13] + x[6]*x[13] + x[10]*x[13] + x[11]*x[13] + x[0]*x[14] + x[1]*x[14] + x[4]*x[14] + x[6]*x[14] + x[7]*x[14] + x[8]*x[14] + x[10]*x[14] + x[13]*x[14] + x[0]*x[15] + x[2]*x[15] + x[4]*x[15] + x[5]*x[15] + x[8]*x[15] + x[9]*x[15] + x[2]*x[16] + x[6]*x[16] + x[8]*x[16] + x[10]*x[16] + x[11]*x[16] + x[12]*x[16] + x[13]*x[16] + x[15]*x[16] + x[2]*x[17] + x[3]*x[17] + x[5]*x[17] + x[8]*x[17] + x[11]*x[17] + x[12]*x[17] + x[13]*x[17] + x[14]*x[17] + x[1]*x[18] + x[3]*x[18] + x[6]*x[18] + x[7]*x[18] + x[10]*x[18] + x[11]*x[18] + x[13]*x[18] + x[14]*x[18] + x[16]*x[18] + x[17]*x[18] + x[0]*x[19] + x[1]*x[19] + x[3]*x[19] + x[5]*x[19] + x[10]*x[19] + x[12]*x[19] + x[14]*x[19] + x[15]*x[19] + x[17]*x[19] + x[0] + x[1] + x[3] + x[5] + x[6] + x[7] + x[10] + x[15] + x[16] + x[18] + x[19] + 1,
x[0]*x[1] + x[0]*x[2] + x[1]*x[2] + x[1]*x[3] + x[2]*x[3] + x[0]*x[4] + x[1]*x[5] + x[2]*x[5] + x[4]*x[5] + x[0]*x[6] + x[2]*x[6] + x[3]*x[6] + x[4]*x[6] + x[0]*x[7] + x[3]*x[7] + x[4]*x[7] + x[6]*x[7] + x[1]*x[8] + x[2]*x[8] + x[3]*x[8] + x[5]*x[8] + x[7]*x[8] + x[1]*x[9] + x[5]*x[9] + x[6]*x[9] + x[7]*x[9] + x[8]*x[9] + x[3]*x[10] + x[5]*x[10] + x[7]*x[10] + x[8]*x[10] + x[9]*x[10] + x[1]*x[11] + x[3]*x[11] + x[5]*x[11] + x[6]*x[11] + x[9]*x[11] + x[10]*x[11] + x[0]*x[12] + x[3]*x[12] + x[4]*x[12] + x[6]*x[12] + x[8]*x[12] + x[9]*x[12] + x[11]*x[12] + x[1]*x[13] + x[2]*x[13] + x[6]*x[13] + x[7]*x[13] + x[8]*x[13] + x[10]*x[13] + x[11]*x[13] + x[0]*x[14] + x[3]*x[14] + x[4]*x[14] + x[5]*x[14] + x[6]*x[14] + x[8]*x[14] + x[9]*x[14] + x[10]*x[14] + x[1]*x[15] + x[2]*x[15] + x[7]*x[15] + x[12]*x[15] + x[14]*x[15] + x[0]*x[16] + x[2]*x[16] + x[3]*x[16] + x[6]*x[16] + x[12]*x[16] + x[13]*x[16] + x[0]*x[17] + x[2]*x[17] + x[3]*x[17] + x[10]*x[17] + x[11]*x[17] + x[12]*x[17] + x[16]*x[17] + x[1]*x[18] + x[2]*x[18] + x[3]*x[18] + x[4]*x[18] + x[7]*x[18] + x[9]*x[18] + x[10]*x[18] + x[11]*x[18] + x[12]*x[18] + x[13]*x[18] + x[14]*x[18] + x[16]*x[18] + x[0]*x[19] + x[2]*x[19] + x[3]*x[19] + x[4]*x[19] + x[5]*x[19] + x[7]*x[19] + x[8]*x[19] + x[11]*x[19] + x[17]*x[19] + x[0] + x[1] + x[7] + x[8] + x[9] + x[10] + x[11] + x[12] + x[16] + x[17] + x[18] + x[19],
x[0]*x[2] + x[0]*x[3] + x[2]*x[3] + x[0]*x[4] + x[2]*x[4] + x[2]*x[5] + x[0]*x[6] + x[2]*x[6] + x[4]*x[6] + x[0]*x[7] + x[1]*x[7] + x[2]*x[7] + x[3]*x[7] + x[6]*x[7] + x[1]*x[8] + x[2]*x[8] + x[3]*x[8] + x[4]*x[8] + x[6]*x[8] + x[7]*x[8] + x[2]*x[9] + x[4]*x[9] + x[1]*x[10] + x[2]*x[10] + x[3]*x[10] + x[6]*x[10] + x[0]*x[11] + x[1]*x[11] + x[2]*x[11] + x[9]*x[11] + x[3]*x[12] + x[0]*x[13] + x[1]*x[13] + x[2]*x[13] + x[3]*x[13] + x[5]*x[13] + x[6]*x[13] + x[8]*x[13] + x[10]*x[13] + x[11]*x[13] + x[0]*x[14] + x[2]*x[14] + x[3]*x[14] + x[5]*x[14] + x[6]*x[14] + x[8]*x[14] + x[9]*x[14] + x[11]*x[14] + x[13]*x[14] + x[0]*x[15] + x[1]*x[15] + x[4]*x[15] + x[6]*x[15] + x[7]*x[15] + x[8]*x[15] + x[9]*x[15] + x[10]*x[15] + x[12]*x[15] + x[0]*x[16] + x[2]*x[16] + x[4]*x[16] + x[5]*x[16] + x[6]*x[16] + x[10]*x[16] + x[13]*x[16] + x[15]*x[16] + x[0]*x[17] + x[1]*x[17] + x[2]*x[17] + x[4]*x[17] + x[8]*x[17] + x[10]*x[17] + x[11]*x[17] + x[12]*x[17] + x[15]*x[17] + x[1]*x[18] + x[2]*x[18] + x[3]*x[18] + x[4]*x[18] + x[7]*x[18] + x[9]*x[18] + x[10]*x[18] + x[16]*x[18] + x[17]*x[18] + x[1]*x[19] + x[4]*x[19] + x[9]*x[19] + x[11]*x[19] + x[13]*x[19] + x[18]*x[19] + x[0] + x[1] + x[2] + x[3] + x[4] + x[5] + x[10] + x[12] + x[14] + x[15] + x[16] + x[17] + x[18] + x[19] + 1,
x[1]*x[2] + x[0]*x[3] + x[2]*x[3] + x[0]*x[4] + x[1]*x[4] + x[2]*x[4] + x[0]*x[5] + x[2]*x[5] + x[3]*x[5] + x[4]*x[6] + x[5]*x[6] + x[1]*x[7] + x[3]*x[7] + x[6]*x[7] + x[0]*x[8] + x[6]*x[8] + x[1]*x[9] + x[2]*x[9] + x[4]*x[9] + x[5]*x[9] + x[7]*x[9] + x[8]*x[9] + x[1]*x[10] + x[2]*x[10] + x[4]*x[10] + x[0]*x[11] + x[1]*x[11] + x[3]*x[11] + x[9]*x[11] + x[10]*x[11] + x[0]*x[12] + x[4]*x[12] + x[5]*x[12] + x[7]*x[12] + x[9]*x[12] + x[10]*x[12] + x[0]*x[13] + x[1]*x[13] + x[2]*x[13] + x[3]*x[13] + x[4]*x[13] + x[5]*x[13] + x[7]*x[13] + x[11]*x[13] + x[1]*x[14] + x[3]*x[14] + x[4]*x[14] + x[9]*x[14] + x[11]*x[14] + x[12]*x[14] + x[13]*x[14] + x[1]*x[15] + x[2]*x[15] + x[3]*x[15] + x[5]*x[15] + x[7]*x[15] + x[8]*x[15] + x[9]*x[15] + x[11]*x[15] + x[13]*x[15] + x[0]*x[16] + x[3]*x[16] + x[6]*x[16] + x[9]*x[16] + x[11]*x[16] + x[13]*x[16] + x[14]*x[16] + x[5]*x[17] + x[6]*x[17] + x[7]*x[17] + x[9]*x[17] + x[10]*x[17] + x[11]*x[17] + x[16]*x[17] + x[0]*x[18] + x[2]*x[18] + x[3]*x[18] + x[11]*x[18] + x[13]*x[18] + x[14]*x[18] + x[16]*x[18] + x[0]*x[19] + x[2]*x[19] + x[3]*x[19] + x[4]*x[19] + x[6]*x[19] + x[7]*x[19] + x[9]*x[19] + x[17]*x[19] + x[0] + x[1] + x[3] + x[5] + x[7] + x[9] + x[10] + x[11] + x[12] + x[13] + x[17] + x[18],
x[0]*x[1] + x[0]*x[3] + x[1]*x[3] + x[1]*x[5] + x[2]*x[5] + x[4]*x[5] + x[2]*x[6] + x[5]*x[6] + x[2]*x[7] + x[3]*x[7] + x[4]*x[7] + x[6]*x[7] + x[0]*x[8] + x[2]*x[8] + x[3]*x[8] + x[5]*x[8] + x[6]*x[8] + x[2]*x[9] + x[3]*x[9] + x[8]*x[9] + x[3]*x[10] + x[5]*x[10] + x[7]*x[10] + x[1]*x[11] + x[2]*x[11] + x[5]*x[11] + x[6]*x[11] + x[9]*x[11] + x[10]*x[11] + x[3]*x[12] + x[5]*x[12] + x[7]*x[12] + x[10]*x[12] + x[11]*x[12] + x[0]*x[13] + x[2]*x[13] + x[4]*x[13] + x[5]*x[13] + x[6]*x[13] + x[7]*x[13] + x[9]*x[13] + x[11]*x[13] + x[2]*x[14] + x[3]*x[14] + x[8]*x[14] + x[9]*x[14] + x[12]*x[14] + x[13]*x[14] + x[1]*x[15] + x[2]*x[15] + x[3]*x[15] + x[9]*x[15] + x[10]*x[15] + x[11]*x[15] + x[13]*x[15] + x[7]*x[16] + x[8]*x[16] + x[11]*x[16] + x[12]*x[16] + x[15]*x[16] + x[2]*x[17] + x[3]*x[17] + x[5]*x[17] + x[8]*x[17] + x[9]*x[17] + x[11]*x[17] + x[13]*x[17] + x[14]*x[17] + x[16]*x[17] + x[2]*x[18] + x[4]*x[18] + x[5]*x[18] + x[10]*x[18] + x[11]*x[18] + x[13]*x[18] + x[14]*x[18] + x[17]*x[18] + x[2]*x[19] + x[4]*x[19] + x[9]*x[19] + x[10]*x[19] + x[12]*x[19] + x[15]*x[19] + x[16]*x[19] + x[17]*x[19] + x[18]*x[19] + x[2] + x[3] + x[5] + x[6] + x[7] + x[12] + x[18] + 1] 
    gb = fgb_sage.groebner_basis(system, threads=64, verbosity=1, matrix_bound=10**7)
    print(gb)
    return 0
    
result, exec_time, mem_used = measure_performance(compute_gb)
print("\n", exec_time, mem_used)
